{"version":3,"sources":["person/Person.js","filter/Filter.js","person-form/PersonForm.js","service/Service.js","notification-message/NotificationMessage.js","App.js","reportWebVitals.js","index.js"],"names":["Person","person","handleDelete","name","number","onClick","Filter","value","onChange","PersonForm","props","onSubmit","addPerson","newName","handleNameChange","newTelephone","handleTelephoneChange","type","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","NotificationMessage","message","className","App","useState","persons","setPersons","setNewName","setNewTelephone","filter","setFilter","setMessage","messageType","setMessageType","useEffect","personService","successMessage","createMessage","setTimeout","handleDeleteButton","window","confirm","alert","p","catch","reason","errorMessage","formProps","event","preventDefault","find","confirmEdit","foundPerson","personToEdit","newPerson","map","personCreated","concat","target","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c008944.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Person({ person, handleDelete }) {\r\n    return(\r\n        <li>{person.name} {person.number} <button onClick={handleDelete}>delete</button></li>\r\n    )\r\n}\r\n\r\nexport default Person\r\n","function Filter({ value, onChange }) {\r\n    return(\r\n        <div>\r\n            <input value={value} onChange={onChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","function PersonForm({ props }) {\r\n    return(\r\n        <form onSubmit={props.addPerson}>\r\n            <div>\r\n                name: <input value={props.newName} onChange={props.handleNameChange}/>\r\n            </div>\r\n            <div>\r\n                telephone: <input value={props.newTelephone} onChange={props.handleTelephoneChange}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteObject = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request\r\n}\r\n\r\nexport default { getAll, create, update, deleteObject }\r\n","import './NotificationMessage.css'\r\nfunction NotificationMessage({ message, type }) {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    return(\r\n        <div className={type}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotificationMessage\r\n","import './App.css';\nimport React, {useEffect, useState} from \"react\";\nimport Person from \"./person/Person\";\nimport Filter from \"./filter/Filter\";\nimport PersonForm from \"./person-form/PersonForm\";\nimport personService from \"./service/Service\"\nimport NotificationMessage from \"./notification-message/NotificationMessage\";\n\nfunction App() {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newTelephone, setNewTelephone] = useState('')\n    const [filter, setFilter] = useState('')\n    const [message, setMessage] = useState('')\n    const [messageType, setMessageType] = useState('')\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(persons => setPersons(persons))\n    }, [])\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const person = {\n            name: newName,\n            number: newTelephone\n        }\n\n        if (!persons.find(p => p.name === person.name)) {\n            successMessage(`Added ${person.name}`)\n\n            personService.create(person).then(personCreated =>\n                setPersons(persons.concat(personCreated)))\n        }\n        else {\n            const confirmEdit = window.confirm(`${person.name} is already added to phonebook, replace the old number with a new one?`)\n            const foundPerson = persons.find(p => p.name === person.name)\n            const personToEdit = { ...foundPerson, number: person.number }\n\n            if (confirmEdit) {\n                personService\n                    .update(personToEdit.id, personToEdit)\n                    .then(newPerson => {\n                        setPersons(persons.map(p => p.id !== foundPerson.id ? p : newPerson))\n                        successMessage(`Changed the number phone successfully`)\n                    })\n            }\n        }\n    }\n\n    const successMessage = (message) => {\n        createMessage(message, 'success')\n    }\n\n    const errorMessage = (message) => {\n        createMessage(message, 'error')\n    }\n\n    const createMessage = (message, type) => {\n        setMessage(message)\n        setMessageType(type)\n        setTimeout(() => {\n            setMessage(null)\n        }, 2000)\n    }\n\n    const handleNameChange = (event) => setNewName(event.target.value)\n    const handleTelephoneChange = (event) => setNewTelephone(event.target.value)\n    const handlePredicateChange = (event) => setFilter(event.target.value)\n\n    const handleDeleteButton = (person) => {\n        const confirmDelete = window.confirm(`Delete ${person.name}?`)\n        if (confirmDelete) {\n            personService.deleteObject(person.id)\n                .then(() => {\n                    alert(`${person.name} deleted successfully`)\n                    setPersons(persons.filter(p=> p.id !== person.id))\n                })\n                .catch((reason) => {\n                    errorMessage(`Information of ${person.name} has already been removed from the server`)\n                    setPersons(persons.filter(p=> p.id !== person.id))\n                })\n        }\n    }\n\n    const formProps = {\n        addPerson: addPerson,\n        newName: newName,\n        handleNameChange: handleNameChange,\n        handleTelephoneChange: handleTelephoneChange\n    }\n\n    return(\n        <div>\n            <h2>Phonebook</h2>\n            <NotificationMessage message={message} type={messageType}></NotificationMessage>\n            <Filter value={filter} onChange={handlePredicateChange}/>\n\n            <h2>add a new</h2>\n            <PersonForm props={formProps}/>\n\n            <h2>Numbers</h2>\n            <ul>\n                {persons\n                    .filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n                    .map(person => <Person key={person.id} person={person} handleDelete={() => handleDeleteButton(person)}/> )}\n            </ul>\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}